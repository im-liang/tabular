buildscript {
    ext {
        gradleNodeVersion = '1.2.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:${gradleNodeVersion}"
    }
}



//------------------------------------------------------------------------------------------------------------------------
//    Plugins - Application
//------------------------------------------------------------------------------------------------------------------------

apply plugin: 'com.moowork.node'

//------------------------------------------------------------------------------------------------------------------------
//    Plugin configuration
//------------------------------------------------------------------------------------------------------------------------

node {
    version = '8.5.0'
    npmVersion = '5.4.2'
    download = true
    workDir = file("${rootDir}/frontend/node")
    nodeModulesDir = file("${rootDir}/frontend")
}



//------------------------------------------------------------------------------------------------------------------------
//    Tasks - NPM
//------------------------------------------------------------------------------------------------------------------------

task clean(type: Delete) {
    group 'build frontend'
    delete "${rootDir}/frontend/dist", "${rootDir}/backend/src/main/resources/static"
}

task cleanNpm(type: Delete) {
    group 'build frontend'
    dependsOn 'clean'
    delete "${rootDir}/frontend/node", "${rootDir}/frontend/node_modules"
}

task npmUpdate {
    group 'build frontend'
    dependsOn 'npm_update'
}

//------------------------------------------------------------------------------------------------------------------------
//    Tasks - Standalone frontend
//------------------------------------------------------------------------------------------------------------------------

task buildStandaloneFrontend(type: NpmTask, dependsOn: npmInstall) {
    group 'build frontend'
    description = 'Compile frontend side folder for development'
    args = ['run', 'buildStandalone']
}

task buildStandaloneFrontendWatch(type: NpmTask, dependsOn: npmInstall) {
    group 'build frontend'
    description = "Build and watches the frontend assets for rebuilding"
    args = ['run', 'buildStandaloneWatch']
}

task serveStandaloneFrontend(type: NpmTask, dependsOn: npmInstall) {
    group 'build frontend'
    description = "Compile frontend folder for production"
    args = ['start']
}

task bootStandaloneFrontend(type: GradleBuild) {
    group 'application'
    setTasks(['clean', 'buildStandaloneFrontend', 'serveStandaloneFrontend'])
//    finalizedBy 'npm_shutdown'
}

task bootStandaloneFrontendWatch(type: GradleBuild) {
    group 'application'
    setTasks(['clean', 'buildStandaloneFrontendWatch', 'serveStandaloneFrontend'])
//    finalizedBy 'npm_shutdown'
}

//------------------------------------------------------------------------------------------------------------------------
//    Tasks - Integrated frontend
//------------------------------------------------------------------------------------------------------------------------

task buildFrontendToSpring(type: NpmTask, dependsOn: npmInstall) {
    group 'build frontend'
    description = 'Compile frontend folder for development'
    args = ['run', 'buildToSpring']
}
